{
	"name": "Notebook 1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "tsgpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "aefb8abb-9130-4f2d-a7b0-009e41d51baf"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/e7930490-e1c6-48b2-865c-aa9e0547dfad/resourceGroups/L200TestPrepRG/providers/Microsoft.Synapse/workspaces/l200synapse/bigDataPools/tsgpool",
				"name": "tsgpool",
				"type": "Spark",
				"endpoint": "https://l200synapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/tsgpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"print('hi')"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import subprocess\r\n",
					"import time\r\n",
					"\r\n",
					"#1. Establish the subprocess \r\n",
					"commandlist = [\"telnet\"] + [\"110.166.52.4:22\"]\r\n",
					"p = subprocess.Popen(commandlist,\r\n",
					"                     stdin = subprocess.PIPE,\r\n",
					"                     stdout = subprocess.PIPE,\r\n",
					"                      stderr = subprocess.PIPE)\r\n",
					"#2. Give the login name. There is no password\r\n",
					"p.stdin.write(\"root\\r\")\r\n",
					"#3. Adding this for sync to avoid any overlap\r\n",
					"time.sleep(1)\r\n",
					"#4. Invoke the communicate to execute the applicati"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import subprocess\r\n",
					"command = 'ping -c 1 private-decea2sremonitoring.eastus2.kusto.windows.net'\r\n",
					"r = subprocess.run(command, capture_output=True, text = True, shell=True)\r\n",
					"print(r.stderr)\r\n",
					"print(r.stdout)\r\n",
					""
				],
				"execution_count": 6
			}
		]
	}
}